{"sections":[],"seeAlsoSections":[{"generated":true,"title":"Articles","identifiers":["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Usage","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/CreatingNetwork","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Provisioning","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Connecting","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SendingMessages","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Configuration","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Exporting"]}],"kind":"article","identifier":{"url":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/LocalNode","interfaceLanguage":"swift"},"metadata":{"role":"article","title":"Setting up Local Node","modules":[{"name":"nRFMeshProvision"}],"roleHeading":"Article"},"abstract":[{"type":"text","text":"Defining the behavior of the node."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/nrfmeshprovision\/localnode"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"The mobile application using nRF Mesh library is itself a mesh node, called the ","type":"text"},{"inlineContent":[{"text":"local node","type":"text"}],"type":"emphasis"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Being a node means, that it is visible to other nodes as one or more "},{"inlineContent":[{"type":"text","text":"Elements"}],"type":"emphasis"},{"text":", each with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"one or more "},{"type":"emphasis","inlineContent":[{"text":"Models","type":"text"}]},{"text":" which support specific behavior and allow sending and receiving messages.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The library automatically supports the following models:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Configuration Server","type":"text"}],"type":"emphasis"},{"type":"text","text":" (required for all nodes)"}]}]},{"content":[{"inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Configuration Client"}]},{"text":" (required for configuring nodes)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Health Server"}]},{"text":" (required for all nodes, but not implemented yet)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Health Client"}]},{"type":"text","text":" (currently not implemented)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"text":"Private Beacon Client","type":"text"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Remote Provisioning Client","type":"text"}],"type":"emphasis"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"SAR Configuration Client","type":"text"}],"type":"emphasis"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Scene Client","type":"text"}],"type":"emphasis"},{"text":" (for controlling scenes)","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"and may be extended to support user models: either Bluetooth SIG defined, like "},{"type":"emphasis","inlineContent":[{"text":"Generic OnOff Client","type":"text"}]},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"or vendor models.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The elements on the "},{"inlineContent":[{"text":"local node","type":"text"}],"type":"emphasis"},{"type":"text","text":" must be configured using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager\/localElements"},{"type":"text","text":" property."},{"type":"text","text":" "},{"text":"Each model declared in this array must have a ","type":"text"},{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ModelDelegate","type":"reference","isActive":true},{"text":" implemented, which maps the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Op Codes of supported messages to their types, and defines the behavior of the model."},{"type":"text","text":" "},{"type":"text","text":"For example, a model delegate can specify that it can handle messages with an Op Code "},{"type":"emphasis","inlineContent":[{"text":"0x8204","type":"text"}]},{"type":"text","text":","},{"type":"text","text":" "},{"text":"which should be decoded to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/GenericOnOffStatus"},{"type":"text","text":" type."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a received message cannot be mapped to any message type (i.e. no local model"},{"type":"text","text":" "},{"text":"supports the op code of received message), it will be decoded as ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/UnknownMessage"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Mind, that the first Element will contain the models mentioned above.","let primaryElement = Element(name: \"Primary Element\", location: .first, ","        models: [","            \/\/ Generic OnOff Client model:","            Model(sigModelId: .genericOnOffClientModelId, ","                  delegate: GenericOnOffClientDelegate()),","            \/\/ A simple vendor model:","            Model(vendorModelId: .simpleOnOffModelId,","                  companyId: .nordicSemiconductorCompanyId,","                  delegate: SimpleOnOffClientDelegate())","        ]",")","meshNetworkManager.localElements = [primaryElement]"]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Even if your implementation does not add any models to the default set, it is required to"},{"text":" ","type":"text"},{"text":"set the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager\/localElements"},{"type":"text","text":". It can be set to an empty array."}]}],"name":"Important","type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The model delegate is notified when a message targeting the model is received if, and only if, the model"},{"type":"text","text":" "},{"text":"is bound to the Application Key used to encrypt the message and is subscribed to its destination","type":"text"},{"text":" ","type":"text"},{"text":"address.","type":"text"}]},{"name":"Tip","content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkDelegate","isActive":true},{"type":"text","text":", set in the manager, is notified about every message"},{"type":"text","text":" "},{"text":"received. This includes messages targeting models that are not configured to receive messages,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"i.e. not bound to any key, or not subscribed to the address set as destination address of the"},{"type":"text","text":" "},{"text":"message.","type":"text"}],"type":"paragraph"}],"style":"tip","type":"aside"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"type":"codeVoice","code":"Example\/nRFMeshProvision\/AppDelegate.swift"},{"type":"text","text":" in “nRF Mesh” sample app for an example."}]}]},{"anchor":"Whats-next","text":"What’s next","type":"heading","level":2},{"inlineContent":[{"text":"The next step is ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/CreatingNetwork"},{"text":".","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision"],["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager"]]},"references":{"doc://nRFMeshProvision/documentation/nRFMeshProvision/Connecting":{"kind":"article","title":"Connecting to mesh network","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Connecting","abstract":[{"text":"How to connect to the network via GATT Proxy node.","type":"text"}],"type":"topic","url":"\/documentation\/nrfmeshprovision\/connecting","role":"article"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/CreatingNetwork":{"kind":"article","title":"Creating and loading a network configuration","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/CreatingNetwork","abstract":[{"type":"text","text":"How to load or create a network."}],"type":"topic","url":"\/documentation\/nrfmeshprovision\/creatingnetwork","role":"article"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Model":{"url":"\/documentation\/nrfmeshprovision\/model","navigatorTitle":[{"kind":"identifier","text":"Model"}],"kind":"symbol","title":"Model","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Model","type":"topic","abstract":[{"type":"text","text":"A Model defines the basic functionality of a "},{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Node","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Model","kind":"identifier"}],"role":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/SendingMessages":{"type":"topic","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SendingMessages","abstract":[{"text":"How to send mesh messages using the manager.","type":"text"}],"url":"\/documentation\/nrfmeshprovision\/sendingmessages","kind":"article","role":"article","title":"Sending messages"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Configuration":{"kind":"article","title":"Configuration","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Configuration","abstract":[{"type":"text","text":"Configuration allows to customize the behavior of the local and remote nodes."}],"type":"topic","url":"\/documentation\/nrfmeshprovision\/configuration","role":"article"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Usage":{"kind":"article","title":"Usage","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Usage","abstract":[{"type":"text","text":"How to start."}],"type":"topic","url":"\/documentation\/nrfmeshprovision\/usage","role":"article"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/MeshNetworkDelegate":{"url":"\/documentation\/nrfmeshprovision\/meshnetworkdelegate","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkDelegate","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MeshNetworkDelegate","kind":"identifier"}],"navigatorTitle":[{"text":"MeshNetworkDelegate","kind":"identifier"}],"title":"MeshNetworkDelegate","kind":"symbol","abstract":[{"type":"text","text":"The mesh network delegate notifies about all received messages as well as"},{"type":"text","text":" "},{"text":"statuses of sent messages.","type":"text"}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision":{"title":"nRFMeshProvision","kind":"symbol","type":"topic","url":"\/documentation\/nrfmeshprovision","abstract":[{"type":"text","text":"Provision, configure and control Bluetooth mesh devices with nRF Mesh library."}],"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision","role":"collection"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Provisioning":{"kind":"article","title":"Provisioning","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Provisioning","abstract":[{"text":"Provisioning is the process of adding an unprovisioned device to a mesh network in a secure way.","type":"text"}],"type":"topic","url":"\/documentation\/nrfmeshprovision\/provisioning","role":"article"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/GenericOnOffStatus":{"title":"GenericOnOffStatus","url":"\/documentation\/nrfmeshprovision\/genericonoffstatus","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericOnOffStatus"}],"type":"topic","role":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/GenericOnOffStatus","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GenericOnOffStatus"}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/UnknownMessage":{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/UnknownMessage","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnknownMessage"}],"title":"UnknownMessage","url":"\/documentation\/nrfmeshprovision\/unknownmessage","abstract":[{"type":"text","text":"The unknown message is returned if no local Model defines"},{"text":" ","type":"text"},{"type":"text","text":"a message type for the received Op Code."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnknownMessage"}],"kind":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/MeshNetworkManager":{"role":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MeshNetworkManager","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MeshNetworkManager"}],"type":"topic","title":"MeshNetworkManager","url":"\/documentation\/nrfmeshprovision\/meshnetworkmanager","abstract":[{"type":"text","text":"The main object responsible for managing the mesh network."}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/MeshNetworkManager/localElements":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"localElements"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:16nRFMeshProvision7ElementC"},{"text":"]","kind":"text"}],"type":"topic","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager\/localElements","url":"\/documentation\/nrfmeshprovision\/meshnetworkmanager\/localelements","role":"symbol","abstract":[{"type":"text","text":"An array of Elements of the local Node."}],"title":"localElements"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Exporting":{"title":"Exporting network configuration","abstract":[{"text":"Export and import feature allows to share mesh network configuration between","type":"text"},{"type":"text","text":" "},{"text":"devices.","type":"text"}],"role":"article","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Exporting","type":"topic","url":"\/documentation\/nrfmeshprovision\/exporting","kind":"article"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/ModelDelegate":{"type":"topic","title":"ModelDelegate","kind":"symbol","url":"\/documentation\/nrfmeshprovision\/modeldelegate","abstract":[{"text":"Model delegate defines the functionality of a ","type":"text"},{"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Model","isActive":true},{"text":" on the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Local Node."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModelDelegate"}],"navigatorTitle":[{"kind":"identifier","text":"ModelDelegate"}],"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ModelDelegate","role":"symbol"}}}