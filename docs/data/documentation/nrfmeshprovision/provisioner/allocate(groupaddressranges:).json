{"abstract":[{"text":"Allocates the given Group Address ranges for the Provisioner.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This method will automatically merge ranges if they overlap."}],"variants":[{"paths":["\/documentation\/nrfmeshprovision\/provisioner\/allocate(groupaddressranges:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Provisioner"]]},"metadata":{"externalID":"s:16nRFMeshProvision11ProvisionerC8allocate18groupAddressRangesySayAA0F5RangeCG_tKF","modules":[{"name":"nRFMeshProvision"}],"extendedModule":"nRFMeshProvision","symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"allocate"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"groupAddressRanges"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:16nRFMeshProvision12AddressRangeC","kind":"typeIdentifier","text":"AddressRange"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"allocate(groupAddressRanges:)","roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allocate"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"groupAddressRanges"},{"kind":"text","text":" "},{"kind":"internalParam","text":"ranges"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:16nRFMeshProvision12AddressRangeC","text":"AddressRange","kind":"typeIdentifier","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/AddressRange"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"range","content":[{"inlineContent":[{"text":"The new group ranges to allocate.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The method throws an error when the Provisioner is added"},{"type":"text","text":" "},{"text":"to the mesh network and at least one new range overlaps any of","type":"text"},{"type":"text","text":" "},{"text":"other Provisionersâ€™ ranges, or the range is of invalid type.","type":"text"}]}],"style":"note","name":"Throws","type":"aside"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Provisioner\/allocate(groupAddressRanges:)"},"references":{"doc://nRFMeshProvision/documentation/nRFMeshProvision/Provisioner/allocate(groupAddressRanges:)":{"type":"topic","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Provisioner\/allocate(groupAddressRanges:)","abstract":[{"text":"Allocates the given Group Address ranges for the Provisioner.","type":"text"},{"text":" ","type":"text"},{"text":"This method will automatically merge ranges if they overlap.","type":"text"}],"url":"\/documentation\/nrfmeshprovision\/provisioner\/allocate(groupaddressranges:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allocate","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"groupAddressRanges"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:16nRFMeshProvision12AddressRangeC","text":"AddressRange"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"}],"title":"allocate(groupAddressRanges:)","kind":"symbol","role":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/AddressRange":{"title":"AddressRange","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AddressRange","kind":"identifier"}],"abstract":[{"text":"The range of addresses of Unicast or Group type.","type":"text"}],"kind":"symbol","url":"\/documentation\/nrfmeshprovision\/addressrange","type":"topic","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/AddressRange","navigatorTitle":[{"text":"AddressRange","kind":"identifier"}],"role":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Provisioner":{"title":"Provisioner","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Provisioner","kind":"identifier"}],"abstract":[{"type":"text","text":"Representation of a Provisioner in the mesh network."}],"kind":"symbol","url":"\/documentation\/nrfmeshprovision\/provisioner","type":"topic","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Provisioner","navigatorTitle":[{"kind":"identifier","text":"Provisioner"}],"role":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision":{"title":"nRFMeshProvision","kind":"symbol","type":"topic","url":"\/documentation\/nrfmeshprovision","abstract":[{"type":"text","text":"Provision, configure and control Bluetooth mesh devices with nRF Mesh library."}],"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision","role":"collection"}}}