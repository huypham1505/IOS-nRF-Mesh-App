{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SceneServerModelDelegate"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16nRFMeshProvision13ModelDelegateP","text":"ModelDelegate","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ModelDelegate"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to handling messages, the Scene Server delegate"},{"type":"text","text":" "},{"text":"should also clear the Current Scene whenever","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SceneServerModelDelegate\/networkDidExitStoredWithSceneState()","type":"reference"},{"text":" ","type":"text"},{"text":"call is received.","type":"text"}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SceneServerModelDelegate","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"text":"SceneServerModelDelegate","kind":"identifier"}],"role":"symbol","modules":[{"name":"nRFMeshProvision"}],"externalID":"s:16nRFMeshProvision24SceneServerModelDelegateP","title":"SceneServerModelDelegate","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SceneServerModelDelegate","kind":"identifier"}],"symbolKind":"protocol"},"abstract":[{"type":"text","text":"The Model Delegate which should be used when defining Scene Server"},{"text":" ","type":"text"},{"text":"model.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ModelDelegate","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/StoredWithSceneModelDelegate","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/TransactionHelper","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ModelError"],"generated":true,"title":"Models"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ModelDelegate"],"title":"Inherits From","type":"inheritsFrom"}],"variants":[{"paths":["\/documentation\/nrfmeshprovision\/sceneservermodeldelegate"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SceneServerModelDelegate\/networkDidExitStoredWithSceneState()"]}],"sections":[],"references":{"doc://nRFMeshProvision/documentation/nRFMeshProvision/Model":{"url":"\/documentation\/nrfmeshprovision\/model","navigatorTitle":[{"kind":"identifier","text":"Model"}],"kind":"symbol","title":"Model","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Model","type":"topic","abstract":[{"type":"text","text":"A Model defines the basic functionality of a "},{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Node","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Model","kind":"identifier"}],"role":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/TransactionHelper":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TransactionHelper"}],"abstract":[{"type":"text","text":"Transaction helper may be used to deal with Transaction Messages."}],"type":"topic","title":"TransactionHelper","kind":"symbol","role":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/TransactionHelper","navigatorTitle":[{"text":"TransactionHelper","kind":"identifier"}],"url":"\/documentation\/nrfmeshprovision\/transactionhelper"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/StoredWithSceneModelDelegate":{"url":"\/documentation\/nrfmeshprovision\/storedwithscenemodeldelegate","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"StoredWithSceneModelDelegate","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"StoredWithSceneModelDelegate"}],"type":"topic","abstract":[{"type":"text","text":"The Model Delegate which should be used for Models that allow storing"},{"type":"text","text":" "},{"type":"text","text":"the state with a Scene."}],"title":"StoredWithSceneModelDelegate","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/StoredWithSceneModelDelegate","role":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision":{"title":"nRFMeshProvision","kind":"symbol","type":"topic","url":"\/documentation\/nrfmeshprovision","abstract":[{"type":"text","text":"Provision, configure and control Bluetooth mesh devices with nRF Mesh library."}],"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision","role":"collection"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/SceneServerModelDelegate":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SceneServerModelDelegate"}],"role":"symbol","url":"\/documentation\/nrfmeshprovision\/sceneservermodeldelegate","title":"SceneServerModelDelegate","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SceneServerModelDelegate","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SceneServerModelDelegate"}],"abstract":[{"type":"text","text":"The Model Delegate which should be used when defining Scene Server"},{"type":"text","text":" "},{"text":"model.","type":"text"}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/ModelDelegate":{"type":"topic","title":"ModelDelegate","kind":"symbol","url":"\/documentation\/nrfmeshprovision\/modeldelegate","abstract":[{"text":"Model delegate defines the functionality of a ","type":"text"},{"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Model","isActive":true},{"text":" on the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Local Node."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModelDelegate"}],"navigatorTitle":[{"kind":"identifier","text":"ModelDelegate"}],"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ModelDelegate","role":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/SceneServerModelDelegate/networkDidExitStoredWithSceneState()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SceneServerModelDelegate\/networkDidExitStoredWithSceneState()","title":"networkDidExitStoredWithSceneState()","abstract":[{"text":"This method should be called whenever the State of a Model changes","type":"text"},{"text":" ","type":"text"},{"text":"for any reason other than receiving Scene Recall message.","type":"text"}],"role":"symbol","url":"\/documentation\/nrfmeshprovision\/sceneservermodeldelegate\/networkdidexitstoredwithscenestate()","required":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"networkDidExitStoredWithSceneState"},{"text":"()","kind":"text"}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/ModelError":{"role":"symbol","title":"ModelError","navigatorTitle":[{"kind":"identifier","text":"ModelError"}],"kind":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ModelError","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ModelError"}],"url":"\/documentation\/nrfmeshprovision\/modelerror","abstract":[{"type":"text","text":"Set of errors that may be thrown for a "},{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ModelDelegate","type":"reference","isActive":true},{"text":" during","type":"text"},{"text":" ","type":"text"},{"text":"handing a received acknowledged message.","type":"text"}],"type":"topic"}}}